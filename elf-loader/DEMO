デモ手順 (概要編）
  - 動的ローダがrtld.soになっていることを確認
    readelf -l sample/mini
  - 実行してみる
    ./sample/mini         # 動的ローダ本来の実行のされ方
    ./rtld.so sample/mini # おまけ機能

デモ手順（ロード編）
  - DEBUG_PRINT_LOAD=1にして実行
    みてもあまり面白くはない

デモ手順（再配置編）
  - DEBUG_PRINT_RELOC=1にする
  - mini.cの始めと終わりのsyscall()以外をコメントアウトして実行
      - GOT領域初期化しているところ
      - LAZY=1にして，PLTとGOTをうまく扱えているところを紹介
      - 二回目のsyscall呼出しは，直接実行してるんだよ，という話をする
      - 確認するために，got_fixup[reloc.c]のGOT値の修正をコメントアウトして実行してみる
  - print("hello...")のコメントアウトを外して実行
      - GOTはELFオブジェクトごとにあるから，
        print.soのGOTが再配置されてるねーという話をする
  - 共有ライブラリのみがグローバル変数を使う場合
      - 次のdo_count()のコメントアウトを外して実行
      - RELOC=1で出てくる，g_countの再配置に注目
  - 実行形式もグローバル変数を使う場合
      - 次のg_count = 0と，その次のdo_count()のコメントアウトを外して実行
      - g_countの再配置に注目


